type User
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, update] }
      {
        allow: groups
        groups: ["Admins"]
        operations: [create, read, update, delete]
      }
    ]
  ) {
  id: ID!
  name: String!
  email: String!
  role: String!
  coins: Int
  points: Int
  modulesCompleted: String
  precision: String
  correctAnswers: Int
  timeSpent: String
}

type Module @model @auth(rules: [{ allow: private, operations: [read] }]) {
  id: ID!
  title: String!
  description: String!
  moduleNumber: Int!
  lessons: [Lesson] @hasMany(indexName: "byModule", fields: ["id"])
  questions: [Question] @hasMany(indexName: "byModule", fields: ["id"])
}

type Lesson @model @auth(rules: [{ allow: private, operations: [read] }]) {
  id: ID!
  title: String!
  content: String!
  image: String
  lessonNumber: Int!
  module: Module @belongsTo(fields: ["moduleId"])
  moduleId: ID! @index(name: "byModule", sortKeyFields: ["lessonNumber"])
}

type Question @model @auth(rules: [{ allow: private, operations: [read] }]) {
  id: ID!
  questionText: String!
  options: [String!]!
  correctAnswerIndex: Int!
  module: Module @belongsTo(fields: ["moduleId"])
  moduleId: ID! @index(name: "byModule")
}


# Adicione este novo tipo ao final do seu schema
type BrailleSymbol @model @auth(rules: [{ allow: private, operations: [read] }]) {
  id: ID!
  letter: String!
  description: String! # Ex: "Ponto 1" ou "Pontos 1, 2"
  imageKey: String!    # O nome do arquivo da imagem em S3 (ex: "a.png")
}