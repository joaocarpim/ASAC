# Configuração global de auth (pode ser ajustado depois para produção)
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

# Usuário
type User
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, update] }
      { allow: groups, groups: ["Admins"], operations: [create, read, update, delete] }
    ]
  ) {
  id: ID!
  name: String!
  email: String!
  role: String! # "user" ou "admin"
  coins: Int
  points: Int
  modulesCompleted: [Int] # lista de módulos concluídos
  currentModule: Int       # em qual módulo o usuário está
  precision: Float
  correctAnswers: Int
  wrongAnswers: Int
  timeSpent: String
  achievements: [Achievement] @hasMany(indexName: "byUser", fields: ["id"])
  progress: [Progress] @hasMany(indexName: "byUser", fields: ["id"])
}

# Conquistas
type Achievement
  @model
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Admins"] }]) {
  id: ID!
  title: String!
  description: String!
  user: User @belongsTo(fields: ["userId"])
  userId: ID! @index(name: "byUser")
  moduleNumber: Int
}

# Progresso do usuário em um módulo
type Progress
  @model
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Admins"] }]) {
  id: ID!
  user: User @belongsTo(fields: ["userId"])
  userId: ID! @index(name: "byUser")
  module: Module @belongsTo(fields: ["moduleId"])
  moduleId: ID! @index(name: "byModule") # ✅ corrigido
  accuracy: Float
  correctAnswers: Int
  wrongAnswers: Int
  timeSpent: String
  completed: Boolean
}

# Módulo
type Module
  @model
  @auth(rules: [{ allow: private, operations: [read] }]) {
  id: ID!
  title: String!
  description: String!
  moduleNumber: Int!
  lessons: [Lesson] @hasMany(indexName: "byModule", fields: ["id"])
  questions: [Question] @hasMany(indexName: "byModule", fields: ["id"])
  progress: [Progress] @hasMany(indexName: "byModule", fields: ["id"]) # ✅ adicionado
}


# Lições
type Lesson
  @model
  @auth(rules: [{ allow: private, operations: [read] }]) {
  id: ID!
  title: String!
  content: String!
  image: String
  lessonNumber: Int!
  module: Module @belongsTo(fields: ["moduleId"])
  moduleId: ID! @index(name: "byModule", sortKeyFields: ["lessonNumber"])
}

# Questões
type Question
  @model
  @auth(rules: [{ allow: private, operations: [read] }]) {
  id: ID!
  questionText: String!
  options: [String!]!
  correctAnswerIndex: Int!
  module: Module @belongsTo(fields: ["moduleId"])
  moduleId: ID! @index(name: "byModule")
}

# Símbolos Braille (para o admin cadastrar no S3)
type BrailleSymbol
  @model
  @auth(rules: [{ allow: private, operations: [read] }]) {
  id: ID!
  letter: String!
  description: String! # Exemplo: "Ponto 1" ou "Pontos 1,2"
  imageKey: String!    # Nome do arquivo no S3
}
